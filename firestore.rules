rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - allow authenticated users to read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow reading all users for blood type matching (but not writing)
    match /users/{userId} {
      allow read: if request.auth != null;
    }

    // Requests collection - allow authenticated users to manage their own requests
    match /requests/{requestId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow read: if request.auth != null; // Allow reading all requests for matching
    }

    // Responses collection - allow authenticated users to manage their own responses
    match /responses/{responseId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow read: if request.auth != null; // Allow reading responses for requests
    }

    // Notifications collection - allow users to manage their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Emergency contacts - allow users to manage their own emergency contacts
    match /emergencyContacts/{contactId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Admin operations - allow admin users to read/write everything
    match /{document=**} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
